@using AgroFichasWeb.Models
@using AgroFichasWeb.ViewModels
@using AgroFichasWeb.ViewModels.Recepciones
@using AgroFichasWeb.AppLayer.Extensions

@model Ingreso1StepViewModel

@{

    ViewBag.NombreSeccion = "Recepciones";

    if (Model.IdProcesoIngreso == 0)
    {
        ViewBag.Title = "Crear Ingreso " + Model.Cultivo.Nombre;
    }
    else
    {
        ViewBag.Title = "Editar Ingreso " + Model.Cultivo.Nombre;
    }

    var cultivos = (from ic in Model.CultivosContrato
                    select new SelectListItem
                    {
                        Value = ic.IdCultivoContrato.ToString(),
                        Text = ic.Nombre,
                        Selected = ic.IdCultivoContrato == Model.IdCultivoContrato
                    });

    var sucursales = from su in Model.Sucursales
                     select new SelectListItem { Value = su.IdSucursal.ToString(), Text = su.Nombre, Selected = su.IdSucursal == Model.IdSucursal };

    var tiposVehiculo = from tv in Model.TiposVehiculo
                        select new SelectListItem { Value = tv.IdTipoVehiculo.ToString(), Text = tv.Nombre, Selected = tv.IdTipoVehiculo == Model.IdTipoVehiculo };

    var empresas = from c in Model.Empresas
                   select new SelectListItem() { Text = c.Nombre, Value = c.IdEmpresa.ToString(), Selected = c.IdEmpresa == Model.IdEmpresa };

    var comunas = from c in Model.Comunas
                  select new SelectListItem() { Text = c.Nombre, Value = c.IdComuna.ToString(), Selected = c.IdComuna == Model.IdComunaOrigen };

    var oSerializer = new System.Web.Script.Serialization.JavaScriptSerializer();
    var bodegas = oSerializer.Serialize(from p in Model.Bodegas
                                        select new { IdSucursal = p.IdSucursal, Nombre = p.Nombre, IdBodega = p.IdBodega, EsManga = p.EsManga ? 1 : 0 });


    var variedades = (from va in Model.Variedades
                      select new SelectListItem { Value = va.IdVariedad.ToString(), Text = va.Cultivo.Nombre + " " + va.Nombre, Selected = va.IdVariedad == Model.IdVariedad }).ToList();

    variedades.Add(new SelectListItem { Value = "0", Text = "(Desconocido)", Selected = Model.IdVariedad == 0 });

    var autorizaciones = new List<SelectListItem>()
{
        new SelectListItem() { Text = "Autorizado", Value = ProcesoIngreso.ANALISIS_AUTORIZADO.ToString(), Selected = (Model.Autorizado == ProcesoIngreso.ANALISIS_AUTORIZADO) },
        new SelectListItem() { Text = "Rechazado" , Value = ProcesoIngreso.ANALISIS_RECHAZADO.ToString(), Selected = (Model.Autorizado == ProcesoIngreso.ANALISIS_RECHAZADO) }
    };

    var tiposGuia = from tg in Model.TipoGuias
                    select new SelectListItem { Value = tg.IdTipoGuia.ToString(), Text = tg.Descripcion, Selected = tg.IdTipoGuia == Model.IdTipoGuia };
}

@section headSection {
    <link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />
    <script src="~/Scripts/jquery-ui-1.12.1.js"></script>
    <script src="~/Scripts/jquery.ui.datepicker-es.js"></script>
}

@section submenuSection {
    @Html.Partial("Submenu")
}

<h2>@ViewBag.Title</h2>
@Html.ValidationSummary("No fue posible procesar su solicitud. Por favor haga las siguientes correcciones:")


@using (Html.BeginForm("crear", "recepciones", FormMethod.Post, new { id = "frm" }))
{
    @Html.Hidden("IdProcesoIngreso", Model.IdProcesoIngreso)
    @Html.Hidden("IdCultivo", Model.IdCultivo)

    <fieldset class="dataForm">
        <p>
            <label>Temporada</label>
            @if (Model.IdProcesoIngreso == 0)
            {
                @Html.Partial("TemporadaSelector")
            }
            else
            {
                <text>@Model.Temporada.Nombre</text>
                @Html.Hidden("IdTemporada", Model.IdTemporada)
            }
        </p>
        <p>
            <label>Fecha Llegada</label>
            @Html.TextBox("FechaLlegada", String.Format("{0:dd/MM/yyyy}", Model.FechaLlegada), new { @class = "datebox" })
            @Html.ValidationMessage("FechaLlegada", ".")
        </p>
        <p>
            <label>Nro Ingreso Manual</label>
            @Html.TextBox("NroIngresoManual", Model.NroIngresoManual, new { @class = "std" })
            @Html.ValidationMessage("NroIngresoManual", ".")
        </p>
        <div class="p">
            <label>Agricultor</label>
            @Html.Partial("~/Views/Controls/AgricultorSelector.cshtml", new AgricultorSelectorViewModel() { IdAgricultor = Model.IdAgricultor, Nombre = (Model.Agricultor != null) ? Model.Agricultor.Nombre : "&nbsp;" })
            @Html.ValidationMessage("IdAgricultor", ".")
            @Html.Hidden("IdAgricultor", Model.IdAgricultor)
        </div>
        <p>
            <label>Empresa</label>
            @Html.DropDownList("IdEmpresa", empresas, new { @class = "std" })
            @Html.ValidationMessage("IdEmpresa", ".")
        </p>
        <p>
            <label>Sucursal Entrega</label>
            @Html.DropDownList("IdSucursal", sucursales, new { @class = "std" })
            @Html.ValidationMessage("IdSucursal", ".")
        </p>
        <p>
            <label>Comuna Origen</label>
            @Html.DropDownList("IdComunaOrigen", comunas, new { @class = "std" })
            @Html.ValidationMessage("IdComunaOrigen", ".")
        </p>
        <p>
            <label>Cultivo</label>
            @Html.DropDownList("IdCultivoContrato", cultivos, new { @class = "std" })
            @Html.ValidationMessage("IdCultivoContrato", ".")
        </p>
        <p>
            <label>Variedad</label>
            @Html.DropDownList("IdVariedad", variedades, new { @class = "std" })
            @Html.ValidationMessage("IdVariedad", ".")
        </p>
        <p>
            <label>Tipo de Vehículo</label>
            @Html.DropDownList("IdTipoVehiculo", tiposVehiculo, new { @class = "std" })
            @Html.ValidationMessage("IdTipoVehiculo", ".")
        </p>
        <p>
            <label>Tipo Guía</label>
            @Html.DropDownList("IdTipoGuia", tiposGuia, new { @class = "std" })
            @Html.ValidationMessage("IdTipoGuia", ".")
        </p>
        <p>
            <label>Número Guía</label>
            @Html.TextBox("NumeroGuia", Model.NumeroGuia, new { maxlength = "10", @class = "std" })
            @Html.ValidationMessage("NumeroGuia", ".")
        </p>
        <p>
            <label>Número Guía Propia</label>
            @Html.TextBox("NroGuiaPropia", Model.NroGuiaPropia, new { maxlength = "10", @class = "std" })
            @Html.ValidationMessage("NroGuiaPropia", ".")
        </p>
        <p>
            <label>Última Entrega</label>
            @Html.CheckBox("UltimaEntrega", Model.UltimaEntrega)
        </p>
        <p>
            <label>Liquidación en Dólares</label>
            @Html.CheckBox("LiquidacionDolar", Model.LiquidacionDolar)
        </p>
        <p>
            <label>Patente</label>
            @Html.TextBox("Patente", Model.Patente, new { maxlength = "10", @class = "std" })
            @Html.ValidationMessage("Patente", ".")
        </p>
        <p>
            <label>Chofer</label>
            @Html.TextBox("Chofer", Model.Chofer, new { maxlength = "50", @class = "std" })
            @Html.ValidationMessage("Chofer", ".")
        </p>
        @if (Model.ValoresAnalisis != null)
        {
            int i = 0;
            foreach (var valor in Model.ValoresAnalisis.OrderBy(a => a.Orden))
            {
                <p>
                    <label>@valor.Nombre<br /><span style="color:red">@(valor.Requerido ? "*" : "")</span></label>
                    @if (valor.IsSelectList())
                    {
                        @Html.DropDownList("ValoresAnalisis[" + i.ToString() + "].Valor", valor.GetSelectList(), new { @class = "std" })
                    }
                    else
                    {
                        @Html.TextBox("ValoresAnalisis[" + i.ToString() + "].Valor", valor.Valor)
                        @valor.UM
                    }
                    @Html.ValidationMessage("ValoresAnalisis[" + i.ToString() + "].Valor", ".")

                    @Html.Hidden("ValoresAnalisis[" + i.ToString() + "].IdParametroAnalisis", valor.IdParametroAnalisis)
                    @Html.Hidden("ValoresAnalisis[" + i.ToString() + "].Nombre", valor.Nombre)
                    @Html.Hidden("ValoresAnalisis[" + i.ToString() + "].UM", valor.UM)
                    @Html.Hidden("ValoresAnalisis[" + i.ToString() + "].Orden", valor.Orden)
                    @Html.Hidden("ValoresAnalisis[" + i.ToString() + "].Requerido", valor.Requerido)
                </p>
                i++;
            }
        }
        <p>
            <label>Observaciones Análisis</label>
            @Html.TextArea("ObservacionesAnalisis", Model.ObservacionesAnalisis, new { @class = "std", rows = 5 })
        </p>
        <p>
            <label>Bodega</label>
            @Html.DropDownList("IdBodega", new List<SelectListItem>(), new { @class = "std" })
            @Html.ValidationMessage("IdBodega", ".")
        </p>
        <p id="mangaContainer">
            <label>Número Manga</label>
            @Html.TextBox("Manga", Model.Manga, new { @class = "std" })
            @Html.ValidationMessage("Manga", ".")
        </p>
        <p>
            <label>Enviar a Secador</label>
            @Html.CheckBox("Secador", Model.Secador)
        </p>
        <p>
            <label>Autorización</label>
            @Html.DropDownList("Autorizado", autorizaciones, new { @class = "std" })
            @Html.ValidationMessage("Autorizado", ".")
        </p>
        <p>
            <label>Peso Inicial (Kg)</label>
            @Html.TextBox("PesoInicial", Model.PesoInicial, new { @class = "std" })
            @Html.ValidationMessage("PesoInicial", ".")
        </p>
        <p>
            <label>Peso Final (Kg)</label>
            @Html.TextBox("PesoFinal", Model.PesoFinal, new { @class = "std" })
            @Html.ValidationMessage("PesoFinal", ".")
        </p>
        <p class="okcancel">
            <input type="submit" value="Guardar Este Ingreso" /> o @Html.ActionLink("Cancelar", "llegadapaso1", "recepciones")
        </p>
    </fieldset>


    <script type="text/javascript">

        $(document).ready(function () {
            $.datepicker.setDefaults($.datepicker.regional["es"]);
            $("#FechaLlegada").datepicker({ showOn: 'button', buttonImage: '@Url.Content("~/Content/images/calendar.gif") ', buttonImageOnly: true });
        });

        function agsCallback(idAgricultor, nombre) {
            $("#IdAgricultor").val(idAgricultor);
        }

        var bodegas = @(bodegas.ToMvcHtmlString());

        $(document).ready(function () {

            $("#IdSucursal").change(function () {
                updateBodegas();
            });

            $("#IdBodega").change(function () {
                updateManga();
            });

            updateBodegas();
        });

        function updateBodegas() {

            $('#IdBodega').html('');
            var idSucursal =$("#IdSucursal").val();
            for (var i = 0; i < bodegas.length; i++)
                if (bodegas[i].IdSucursal == idSucursal)
                    $('#IdBodega')
                        .append($("<option></option>")
                        .attr("value",bodegas[i].IdBodega)
                        .text(bodegas[i].Nombre));

            updateManga();
        };


        function updateManga() {

            $("#mangaContainer").hide();

            var idBodega =$("#IdBodega").val();
            for (var i = 0; i < bodegas.length; i++)
                if (bodegas[i].IdBodega == idBodega && bodegas[i].EsManga == "1")
                    $("#mangaContainer").show();

        };
    </script>
}